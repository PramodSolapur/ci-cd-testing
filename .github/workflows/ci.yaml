name: CI
on:
    pull_request:
        branches:
            - main
    push:
        branches:
            - main
jobs:
    build-and-test:
        name: Build the project
        runs-on: ubuntu-latest
        services:
            postgres:
                image: postgres:15
                ports: [5432:5432]
                env:
                    POSTGRES_USER: testuser
                    POSTGRES_PASSWORD: testpass
                    POSTGRES_DB: testdb
                options: >-
                    --health-cmd="pg_isready -U testuser"
                    --health-interval=10s
                    --health-timeout=5s
                    --health-retries=5
        steps:
            - uses: actions/checkout@v4
            - name: Install dependencies
              run: npm ci
            - name: Run eslint
              run: npm run eslint
            - name: Test and Coverage
              run: npm run test
              env:
                  DB_HOST: localhost
                  DB_PORT: 5432
                  DB_USERNAME: testuser
                  DB_PASSWORD: testpass
                  DB_NAME: testdb
            - name: Build-ts
              run: npm run build
            - name: SonarCloud Scan
              uses: SonarSource/sonarcloud-github-action@master
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    build-and-push-docker:
        name: Build and Push Docker Image
        needs: build-and-test
        runs-on: ubuntu-latest
        env:
            IMAGE_NAME: jsnode/cicd_test
            IMAGE_TAG: build-${{ github.run_number }}
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
            - name: Log in to Docker hub
              uses: docker/login-action@v1
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_PASSWORD }}
            - name: Build Docker image
              run: docker build -t ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} -f docker/Dockerfile .
            - name: Push Docker image to Docker hub
              run: docker push ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
